@model FromLocalsToLocals.Models.VendorTypeViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer _localizer
@inject UserManager<AppUser> usermanager
@using Microsoft.EntityFrameworkCore

@{
    ViewData["Title"] = _localizer["All Services"];
    Layout = "~/Views/Shared/_Layout.cshtml";


    var prevDisabled = !Model.Vendors.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Vendors.HasNextPage ? "disabled" : "";
    var vendorType = Html.ViewContext.HttpContext.Request.Query["vendorType"];
    var searchString = Html.ViewContext.HttpContext.Request.Query["searchString"];
    var itemCount = Html.ViewContext.HttpContext.Request.Query["itemCount"];
    var itemCountDouble = (!string.IsNullOrEmpty(itemCount)) ? double.Parse(itemCount) : 20;

    var user = await usermanager.Users.Include(x => x.Vendors).Include(x=>x.Folllowing).FirstOrDefaultAsync(x => x.Id == usermanager.GetUserId(User));
}

<head>
    <style>
        .card {
            overflow: hidden;
            max-height: 470px;
            min-height: 470px;
            max-width: 290px;
            min-width: 140px;
            box-shadow: 0 0 15px rgba(10, 10, 10, 0.3);
        }
    </style>
</head>
@{
    var itemsInRow = 4; // Make sure its divisible by 12
    var rows = Math.Ceiling(itemCountDouble / itemsInRow);
    var vendorCount = Model.Vendors.Count;
}
<h2 class="mt-4 mb-2" style="text-align: center; font-size: 30px;">@_localizer["New Services"]</h2>
<p class="mt-2" style="text-align: center; font-size: 18px;">@_localizer["Services in the past month registered on our site"]</p>
<hr />
@if (Model.NewVendors.Count() == 0)
{
    <p class="mt-2 mb-2 text-center" style="font-size: 21px; border-radius: 7px;">@_localizer["No new services:"]<br /><br /><b>@_localizer["But there might be some soon!"]</b></p>
    <hr />
}
else
{
    <div class="row" style="background-color: #CCBA8B;">
        @foreach (var vendor in Model.NewVendors)
        {
            <div class="col-sm-@(12 / itemsInRow) mb-3 mt-3">
                <div class="card" style="width:inherit; height:inherit; background-color: #F7F7F7;">
                    @if (vendor.Image == null)
                    {
                        <img src="~/Assets/localSeller.png" class="mt-3" style="width:160px ; height:150px; border-radius: 50%; align-self:center;" />
                    }
                    else
                    {
                        <img src="data:image;base64,@System.Convert.ToBase64String(vendor.Image)" class="mt-3" style="width:160px; height: 150px; border-radius: 50%; align-self:center;" />
                    }
                <div class="card-body">
                    <h5 class="card-title" style="margin:0px;">@vendor.Title</h5>
                    <hr />
                    @switch (vendor.VendorTypeDb)
                    {
                        case "CarRepair":<p class="text-muted text-uppercase">@_localizer["Car repair"]</p>
                        break;

                    default: <p class="text-muted text-uppercase">@vendor.VendorTypeDb</p>
                    break;
            }
                    <hr />
                    @if (vendor.ReviewsCount.Sum() == 0)
                    {
                        <p class="font-italic">@_localizer["No Reviews"]</p>
                    }
                    else
                    {
                        @switch (@Math.Round(vendor.Average))
                        {
                            case 5:
                                <p class="ml-3 ">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span>@vendor.Average.ToString("0.0")</span>
                                </p>
                                break;
                            case 4:
                                <p class="ml-3">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star"></span>
                                    <span>@vendor.Average.ToString("0.0")</span>
                                </p>
                                break;
                            case 3:
                                <p class="ml-3">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span>@vendor.Average.ToString("0.0")</span>
                                </p>
                                break;
                            case 2:
                                <p class="ml-3">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span>@vendor.Average.ToString("0.0")</span>
                                </p>
                                break;
                            default:
                                <p class="ml-3">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span>@vendor.Average.ToString("0.0")</span>
                                </p>
                                break;
                        }
                    }
                    <hr />
                    <div class="navbar" style="align-content:center">
                        <a asp-route-id="@vendor.ID" asp-controller="Vendors" asp-action="Details"
                           class="btn btn-primary" style="background-color: #CCBA8B; border: 2px #CCBA8B;">@_localizer["Read More"]</a>
                        <a asp-route-id="Vendor/@vendor.ID" asp-controller="Reviews" asp-action="Reviews"
                           class="btn btn-primary" style="background-color: #CCBA8B; border: 2px #CCBA8B;">@_localizer["Reviews"]</a>
                    </div>
                    @if (user != null && !user.Vendors.Any(x => x.ID == vendor.ID))
                    {
                        if (user.Folllowing.Any(x => x.VendorID == vendor.ID))
                        {
                            <button data-follow="false" class="btn btn-primary w-100 followBtn" 
                                    onclick="followBtnClick(this,@vendor.ID)"
                                    style="background-color: #CCBA8B; border: 2px #CCBA8B;" >Unfollow</button>
                        }
                        else
                        {
                            <button data-follow="true" class="btn btn-primary w-100 followBtn" 
                                    onclick="followBtnClick(this,@vendor.ID)"
                                    style="background-color: #CCBA8B; border: 2px #CCBA8B;">Follow</button>
                        }
                    }
                </div>
                </div>
            </div>
        }

    </div>
}
<h2 class="mt-4" style="text-align: center; font-size: 30px;"> @_localizer["All Services"]</h2>
<hr />
<form asp-action="AllVendors" method="get" class="container-fluid">
    <select asp-for="VendorType" asp-items="Model.Types"
            class="btn btn-primary dropdown-toggle" data-toggle="dropdown"
            style="background-color: #CCBA8B; border: 2px #CCBA8B;">
        <option value="">@_localizer["All"]</option>
    </select>
    <select asp-for="OrderType" asp-items="Model.OrderTypes" class="btn btn-primary dropdown-toggle"
            data-toggle="dropdown"
            aria-haspopup="true" aria-expanded="false">
        <option value="">@_localizer["Random"]</option>
    </select>
    <input type="text" class="m-3" name="searchString" placeholder=@_localizer["Title"] />@_localizer["Items per page:"]
    <input type="number" class="m-3" min="1" max="50" name="itemCount" value=@itemCountDouble />
    <input class="btn btn-primary" style="float:right; width: 100px;" type="submit" value=@_localizer["Filter"] />
</form>
<hr />
@for (int i = 0; i < rows; i++)
{
    <div class="row">
        @for (int j = 0; j < itemsInRow && i * itemsInRow + j < vendorCount; j++)
        {
            <div class="col-sm-@(12/itemsInRow) mb-2 ">
                <div class="card" style="width:inherit; height:inherit; background-color: #F7F7F7;">
                    @if (Model.Vendors[i * itemsInRow + j].Image == null)
                    {
                        <img src="~/Assets/localSeller.png" class="mt-3" style="width:160px ; height:150px; border-radius: 50%; align-self:center;" />
                    }
                    else
                    {
                        <img src="data:image;base64,@System.Convert.ToBase64String(Model.Vendors[i * itemsInRow + j].Image)" class="mt-3" style="width:160px; height: 150px; border-radius: 50%; align-self:center;" />
                    }
                <div class="card-body">
                    <h5 class="card-title" style="margin:0px;">@Model.Vendors[i * itemsInRow + j].Title</h5>
                    <hr />
                    @switch (Model.Vendors[i * itemsInRow + j].VendorTypeDb)
                    {
                        case "CarRepair":<p class="text-muted text-uppercase">@_localizer["Car repair"]</p>
                        break;

                    default: <p class="text-muted text-uppercase">@Model.Vendors[i * itemsInRow + j].VendorTypeDb</p>
                    break;
            }
                    <hr />
                    @if (Model.Vendors[i * itemsInRow + j].ReviewsCount.Sum() == 0)
                    {
                        <p class="font-italic">@_localizer["No Reviews"]</p>
                    }
                    else
                    {
                        @switch (@Math.Round(Model.Vendors[i * itemsInRow + j].Average))
                        {
                            case 5:
                                <p class="ml-3 ">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span>@Model.Vendors[i * itemsInRow + j].Average.ToString("0.0")</span>
                                </p>
                                break;
                            case 4:
                                <p class="ml-3">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star"></span>
                                    <span>@Model.Vendors[i * itemsInRow + j].Average.ToString("0.0")</span>
                                </p>
                                break;
                            case 3:
                                <p class="ml-3">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span>@Model.Vendors[i * itemsInRow + j].Average.ToString("0.0")</span>
                                </p>
                                break;
                            case 2:
                                <p class="ml-3">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span>@Model.Vendors[i * itemsInRow + j].Average.ToString("0.0")</span>
                                </p>
                                break;
                            default:
                                <p class="ml-3">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span>@Model.Vendors[i * itemsInRow + j].Average.ToString("0.0")</span>
                                </p>
                                break;
                        }
                    }
                    <hr />
                    <div class="navbar" style="align-content:center">
                        <a asp-route-id="@Model.Vendors[i * itemsInRow + j].ID" asp-controller="Vendors" asp-action="Details"
                           class="btn btn-primary" style="background-color: #CCBA8B; border: 2px #CCBA8B;">@_localizer["Read More"]</a>
                        <a asp-route-id="Vendor/@Model.Vendors[i * itemsInRow + j].ID" asp-controller="Reviews" asp-action="Reviews"
                           class="btn btn-primary" style="background-color: #CCBA8B; border: 2px #CCBA8B;">@_localizer["Reviews"]</a>
                    </div>
                    @if (user != null && !user.Vendors.Any(x => x.ID == Model.Vendors[i * itemsInRow + j].ID))
                    {
                        if (user.Folllowing.Any(x => x.VendorID == Model.Vendors[i * itemsInRow + j].ID))
                        {
                            <button data-follow="false" class="btn btn-primary w-100 followBtn" 
                                    onclick="followBtnClick(this,@Model.Vendors[i * itemsInRow + j].ID)"
                                    style="background-color: #CCBA8B; border: 2px #CCBA8B;">Unfollow</button>
                        }
                        else
                        {
                            <button data-follow="true" class="btn btn-primary w-100 followBtn"
                                    onclick="followBtnClick(this,@Model.Vendors[i * itemsInRow + j].ID)"
                                    style="background-color: #CCBA8B; border: 2px #CCBA8B;">Follow</button>
                        }
                    }
                </div>
                </div>
            </div>
        }
    </div>
}
<hr />
<ul class="pagination">
    <li class="page-item @prevDisabled">
        <a class="page-link" href="@Url.Action("AllVendors", new {itemCount=itemCount, searchString = searchString , vendorType=vendorType , page = (Model.Vendors.PageIndex - 1) } )"><<</a>
    </li>
    @for (int i = 1; i <= Model.Vendors.TotalPages; i++)
    {
        <li class="@(i == Model.Vendors.PageIndex ? "page-item active" : "page-item")">
            <a class="page-link" href="@Url.Action("AllVendors", new {itemCount=itemCount, searchString = searchString , vendorType=vendorType , page = i })">@i</a>
        </li>
    }
    <li class="page-item @nextDisabled">
        <a class="page-link" href="@Url.Action("AllVendors", new {itemCount=itemCount, searchString = searchString , vendorType=vendorType ,page = (Model.Vendors.PageIndex + 1) } )">>></a>
    </li>
</ul>

<script>
    
    function followBtnClick(obj,id) {
        $.ajax({
            type: "POST",
            url: '/Follower/' + obj.innerText+'/' + id,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (m) {
                if (m.success) {
                    if (obj.innerText == "Follow") {
                        obj.innerText = "Unfollow";
                    } else if (obj.innerText == "Unfollow") {
                        obj.innerText = "Follow";
                    }
                } else {
                    alert("Error occured when trying to " + obj.innerText + " vendor");
                }
            },
            error: function(e) {
                alert("Error occured when trying to " + obj.innerText + " vendor");
            }
        });
    }



</script>
