@model FromLocalsToLocals.Models.VendorTypeViewModel


@{
    ViewData["Title"] = "All Services";
    Layout = "~/Views/Shared/_Layout.cshtml";


    var prevDisabled = !Model.Vendors.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Vendors.HasNextPage ? "disabled" : "";
    var vendorType = Html.ViewContext.HttpContext.Request.Query["vendorType"];
    var searchString = Html.ViewContext.HttpContext.Request.Query["searchString"];
    var itemCount = Html.ViewContext.HttpContext.Request.Query["itemCount"];
    var itemCountDouble = (!string.IsNullOrEmpty(itemCount)) ? double.Parse(itemCount) : 20;
}

<head>
    <style>
        .card {
            overflow: hidden;
            max-height: 470px;
            min-height: 470px;
            max-width: 290px;
            min-width: 140px;
            box-shadow: 0 0 15px rgba(10, 10, 10, 0.3);
        }
    </style>
</head>
@{
    var itemsInRow = 4; // Make sure its divisible by 12
    var rows = Math.Ceiling(itemCountDouble / itemsInRow);
    var vendorCount = Model.Vendors.Count;
    var currentTime = DateTime.UtcNow.ToString("yyyy-MM-dd HH:mm");
}
<h2 class="mt-4" style="text-align: center; font-size: 30px;">New Services</h2>
<hr />

@if (Model.NewVendors.Count() == 0)
{
    <p class="list-group-item mt-2 mb-2 text-center" style="font-size: 21px; border-radius: 7px;">No new services:(<br /><br /><b>But there might be some soon!</b></p>
}
else
{
    <div class="row" style="background-color: #CCBA8B;">
        @foreach (var vendor in Model.NewVendors)
        {
            <div class="col-sm-@(12 / itemsInRow) mb-3 mt-3">
                <div class="card" style="width:inherit; height:inherit; background-color: #F7F7F7;">
                    @if (vendor.Image == null)
                    {
                        <img src="~/Assets/localSeller.png" class="mt-3" style="width:160px ; height:150px; border-radius: 50%; align-self:center;" />
                    }
                    else
                    {
                        <img src="data:image;base64,@System.Convert.ToBase64String(vendor.Image)" class="mt-3" style="width:160px; height: 150px; border-radius: 50%; align-self:center;" />
                    }
                <div class="card-body">
                    <h5 class="card-title" style="margin:0px;">@vendor.Title</h5>
                    <hr />
                    @switch (vendor.VendorTypeDb)
                    {
                        case "CarRepair":<p class="text-muted text-uppercase">Car repair</p>
                            break;

                        default: <p class="text-muted text-uppercase">@vendor.VendorTypeDb</p>
                        break;
                }
                    <hr />
                    @if (vendor.ReviewsCount.Sum() == 0)
                    {
                        <p class="font-italic">No Reviews</p>
                    }
                    else
                    {
                        @switch (@Math.Round(vendor.Average))
                        {
                            case 5:
                                <p class="ml-3 ">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span>@vendor.Average.ToString("0.0")</span>
                                </p>
                                break;
                            case 4:
                                <p class="ml-3">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star"></span>
                                    <span>@vendor.Average.ToString("0.0")</span>
                                </p>
                                break;
                            case 3:
                                <p class="ml-3">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span>@vendor.Average.ToString("0.0")</span>
                                </p>
                                break;
                            case 2:
                                <p class="ml-3">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span>@vendor.Average.ToString("0.0")</span>
                                </p>
                                break;
                            default:
                                <p class="ml-3">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                    <span>@vendor.Average.ToString("0.0")</span>
                                </p>
                                break;
                        }
                    }
                    <hr />
                    <div class="navbar" style="align-content:center">
                        <a asp-route-id="@vendor.ID" asp-controller="Vendors" asp-action="Details"
                           class="btn btn-primary" style="background-color: #CCBA8B; border: 2px #CCBA8B;">Read More</a>
                        <a asp-route-id="Vendor/@vendor.ID" asp-controller="Reviews" asp-action="Reviews"
                           class="btn btn-primary" style="background-color: #CCBA8B; border: 2px #CCBA8B;">Reviews</a>
                    </div>
                    <div>
                        <p class="mt-1" style="float: right;" id="vendorDate">
                            <script>
                                timeDifference(@currentTime, @vendor.DateCreated);
                            </script>
                        </p>
                    </div>
                </div>
                </div>
            </div>
        }

    </div>
}
<h2 class="mt-4" style="text-align: center; font-size: 30px;"> All Services</h2>
<hr />
<form asp-action="AllVendors" method="get" class="container-fluid">
    <select asp-for="VendorType" asp-items="Model.Types" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
        <option value="">All</option>
    </select>
    <select asp-for="OrderType" asp-items="Model.OrderTypes" class="btn btn-primary dropdown-toggle"
            data-toggle="dropdown"
            aria-haspopup="true" aria-expanded="false">
        <option value="">Random</option>
    </select>
    <input type="text" class="m-3" name="searchString" placeholder="Title" /> Items per page:
    <input type="number" class="m-3" min="1" max="50" name="itemCount" value=@itemCountDouble />
    <input class="btn btn-primary" style="float:right; width: 100px;" type="submit" value="Filter" />
</form>
<hr />
@for (int i = 0; i < rows; i++)
{
    <div class="row">
        @for (int j = 0; j < itemsInRow && i * itemsInRow + j < vendorCount; j++)
        {
            <div class="col-sm-@(12/itemsInRow) mb-2 ">
                <div class="card" style="width:inherit; height:inherit; background-color: #F7F7F7;">
                    @if (Model.Vendors[i * itemsInRow + j].Image == null)
                    {
                        <img src="~/Assets/localSeller.png" class="mt-3" style="width:160px ; height:150px; border-radius: 50%; align-self:center;" />
                    }
                    else
                    {
                        <img src="data:image;base64,@System.Convert.ToBase64String(Model.Vendors[i * itemsInRow + j].Image)" class="mt-3" style="width:160px; height: 150px; border-radius: 50%; align-self:center;" />
                    }
                    <div class="card-body">
                        <h5 class="card-title" style="margin:0px;">@Model.Vendors[i * itemsInRow + j].Title</h5>
                        <hr />
                        @switch (Model.Vendors[i * itemsInRow + j].VendorTypeDb)
                        {
                            case "CarRepair":<p class="text-muted text-uppercase">Car repair</p>
                                break;

                            default: <p class="text-muted text-uppercase">@Model.Vendors[i * itemsInRow + j].VendorTypeDb</p>
                            break;
                    }
                        <hr />
                        @if (Model.Vendors[i * itemsInRow + j].ReviewsCount.Sum() == 0)
                        {
                            <p class="font-italic">No Reviews</p>
                        }
                        else
                        {
                            @switch (@Math.Round(Model.Vendors[i * itemsInRow + j].Average))
                            {
                                case 5:
                                    <p class="ml-3 ">
                                        <span class="fa fa-star checked"></span>
                                        <span class="fa fa-star checked"></span>
                                        <span class="fa fa-star checked"></span>
                                        <span class="fa fa-star checked"></span>
                                        <span class="fa fa-star checked"></span>
                                        <span>@Model.Vendors[i * itemsInRow + j].Average.ToString("0.0")</span>
                                    </p>
                                    break;
                                case 4:
                                    <p class="ml-3">
                                        <span class="fa fa-star checked"></span>
                                        <span class="fa fa-star checked"></span>
                                        <span class="fa fa-star checked"></span>
                                        <span class="fa fa-star checked"></span>
                                        <span class="fa fa-star"></span>
                                        <span>@Model.Vendors[i * itemsInRow + j].Average.ToString("0.0")</span>
                                    </p>
                                    break;
                                case 3:
                                    <p class="ml-3">
                                        <span class="fa fa-star checked"></span>
                                        <span class="fa fa-star checked"></span>
                                        <span class="fa fa-star checked"></span>
                                        <span class="fa fa-star"></span>
                                        <span class="fa fa-star"></span>
                                        <span>@Model.Vendors[i * itemsInRow + j].Average.ToString("0.0")</span>
                                    </p>
                                    break;
                                case 2:
                                    <p class="ml-3">
                                        <span class="fa fa-star checked"></span>
                                        <span class="fa fa-star checked"></span>
                                        <span class="fa fa-star"></span>
                                        <span class="fa fa-star"></span>
                                        <span class="fa fa-star"></span>
                                        <span>@Model.Vendors[i * itemsInRow + j].Average.ToString("0.0")</span>
                                    </p>
                                    break;
                                default:
                                    <p class="ml-3">
                                        <span class="fa fa-star checked"></span>
                                        <span class="fa fa-star"></span>
                                        <span class="fa fa-star"></span>
                                        <span class="fa fa-star"></span>
                                        <span class="fa fa-star"></span>
                                        <span>@Model.Vendors[i * itemsInRow + j].Average.ToString("0.0")</span>
                                    </p>
                                    break;
                            }
                        }
                        <hr />
                        <div class="navbar" style="align-content:center">
                            <a asp-route-id="@Model.Vendors[i * itemsInRow + j].ID" asp-controller="Vendors" asp-action="Details"
                               class="btn btn-primary" style="background-color: #CCBA8B; border: 2px #CCBA8B;">Read More</a>
                            <a asp-route-id="Vendor/@Model.Vendors[i * itemsInRow + j].ID" asp-controller="Reviews" asp-action="Reviews"
                               class="btn btn-primary" style="background-color: #CCBA8B; border: 2px #CCBA8B;">Reviews</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
<hr />
<ul class="pagination">
    <li class="page-item @prevDisabled">
        <a class="page-link" href="@Url.Action("AllVendors", new {itemCount=itemCount, searchString = searchString , vendorType=vendorType , page = (Model.Vendors.PageIndex - 1) } )"><<</a>
    </li>
    @for (int i = 1; i <= Model.Vendors.TotalPages; i++)
    {
        <li class="@(i == Model.Vendors.PageIndex ? "page-item active" : "page-item")">
            <a class="page-link" href="@Url.Action("AllVendors", new {itemCount=itemCount, searchString = searchString , vendorType=vendorType , page = i })">@i</a>
        </li>
    }
    <li class="page-item @nextDisabled">
        <a class="page-link" href="@Url.Action("AllVendors", new {itemCount=itemCount, searchString = searchString , vendorType=vendorType ,page = (Model.Vendors.PageIndex + 1) } )">>></a>
    </li>
</ul>

<script>
    $('p [id=vendorDate]').each(timeDifference())


    function timeDifference(d, c) {
        var msPerMinute = 60 * 1000;
        var msPerHour = msPerMinute * 60;
        var msPerDay = msPerHour * 24;

        var date = new Date(Date.parse(d));
        var currentDate = new Date(Date.parse(c));

        var elapsed = currentDate - date;

        if (elapsed < msPerMinute) {
            return 'Less than a minute ago';
        }

        else if (elapsed < msPerHour) {
            return Math.round(elapsed / msPerMinute) + ' minutes ago';
        }

        else if (elapsed < msPerDay) {
            return Math.round(elapsed / msPerHour) + ' hours ago';
        }

        else if (elapsed < msPerMonth) {
            return 'approximately ' + Math.round(elapsed / msPerDay) + ' days ago';
        }
    }
</script>
