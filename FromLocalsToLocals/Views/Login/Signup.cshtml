@model FromLocalsToLocals.Models.User

@{
    ViewData["Title"] = "Signup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@ViewData["Title"]</h1>


<head>
    <style>
        #login-form {
            position: absolute;
            top: 20%;
            left: 40%;
            border: 1px solid;
            padding: 10px 10px;
        }

        .field-validation-error {
            color: red;
            font-family: Arial, Helvetica, sans-serif;
        }
    </style>
</head>


<body>
    <div id="login-form">
        @using (Html.BeginForm("AddUser", "Login", FormMethod.Post))
        {
            <table>

                @Html.Label("Write your email:")
                <p>
                    @Html.TextBoxFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email)
                </p>

                @Html.Label("Write your username:")
                <p>
                    @Html.TextBoxFor(model => model.Username)
                    @Html.ValidationMessageFor(model => model.Username)
                </p>

                @Html.Label("Write your Password:")
            <p>
                @Html.PasswordFor(model => model.HashedPsw)
                @Html.ValidationMessageFor(model => model.HashedPsw)
            </p>

                @Html.Label("Confirm Password:")
            <p>
                @Html.Password("confPassword")
                @Html.ValidationMessageFor(model => model.HashedPsw)
            </p>


            </table>
            <form asp-action="AddUser">
                <input type="submit" value="Add User" class="btn btn-danger" />

            </form>
        }
    </div>
</body>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}